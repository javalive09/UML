@startuml
box "App" #LightYellow
participant App.java
participant Activity.java
participant ContextImpl.java
participant SystemServiceRegistry.java
participant CachedServiceFetcher.java
participant WindowManagerImpl.java
participant WindowManagerGlobal.java
participant ViewRootImpl.java
participant Choreographer.java
end box

box "WMS" #LightYellow
participant Session.java
participant WindowManagerService.java
participant WindowToken.java
participant WindowState.java
participant WindowStateAnimator.java
participant DisplayContent.java
participant SurfaceSession.java
participant WindowSurfaceController.java
participant android_view_SurfaceSession.cpp
participant SurfaceControl.java_Builder.java
participant SurfaceControl.java
participant android_view_SurfaceControl.cpp
participant SurfaceComposerClient.cpp
participant SurfaceComposerClient.cpp_ComposerService.cpp
end box

box "SurfaceFlinger" #LightYellow
participant Client.cpp
participant SurfaceFlinger.cpp
participant BufferQueueLayer.cpp
end box

App.java --> Activity.java: getSystemService()
activate Activity.java
Activity.java --> ContextImpl.java: getSystemService()
activate ContextImpl.java
ContextImpl.java --> SystemServiceRegistry.java: getSystemService()
activate SystemServiceRegistry.java
SystemServiceRegistry.java --> CachedServiceFetcher.java: createService()
activate CachedServiceFetcher.java
CachedServiceFetcher.java --> WindowManagerImpl.java: new()
activate WindowManagerImpl.java
deactivate CachedServiceFetcher.java
deactivate SystemServiceRegistry.java
deactivate ContextImpl.java
deactivate Activity.java
deactivate WindowManagerImpl.java

App.java-> WindowManagerImpl.java: addView()
activate WindowManagerImpl.java
WindowManagerImpl.java --> WindowManagerGlobal.java: addView()
activate WindowManagerGlobal.java
WindowManagerGlobal.java --> ViewRootImpl.java: setView()
activate ViewRootImpl.java
ViewRootImpl.java --> ViewRootImpl.java: requestLayout()
activate ViewRootImpl.java
note left:1.请求首帧绘制
ViewRootImpl.java --> ViewRootImpl.java: scheduleTraversals()
activate ViewRootImpl.java
ViewRootImpl.java --> Choreographer.java: postCallback()
activate Choreographer.java
deactivate Choreographer.java

deactivate ViewRootImpl.java
deactivate ViewRootImpl.java

ViewRootImpl.java --> Session.java: addToDisplay()
activate Session.java
note left:2.添加到屏幕
Session.java --> WindowManagerService.java: addWindow()
activate WindowManagerService.java
WindowManagerService.java --> WindowToken.java: new()
activate WindowToken.java
deactivate WindowToken.java
WindowManagerService.java --> WindowState.java: new()
activate WindowState.java
WindowState.java --> WindowStateAnimator.java: new()
activate WindowStateAnimator.java
deactivate WindowStateAnimator.java


deactivate WindowState.java

WindowManagerService.java --> WindowState.java: attach()
activate WindowState.java

WindowState.java --> Session.java:windowAddedLocked()
activate Session.java

Session.java --> SurfaceSession.java:new()
activate SurfaceSession.java

SurfaceSession.java --> SurfaceSession.java:nativeCreate()
activate SurfaceSession.java

SurfaceSession.java --> android_view_SurfaceSession.cpp:nativeCreate()
activate android_view_SurfaceSession.cpp

android_view_SurfaceSession.cpp --> SurfaceComposerClient.cpp:new()
activate SurfaceComposerClient.cpp
deactivate SurfaceComposerClient.cpp

android_view_SurfaceSession.cpp --> SurfaceComposerClient.cpp:incStrong()
activate SurfaceComposerClient.cpp
SurfaceComposerClient.cpp --> SurfaceComposerClient.cpp:onFirstRef()
activate SurfaceComposerClient.cpp

SurfaceComposerClient.cpp --> SurfaceComposerClient.cpp_ComposerService.cpp:getComposerService()
activate SurfaceComposerClient.cpp_ComposerService.cpp
deactivate SurfaceComposerClient.cpp_ComposerService.cpp
SurfaceComposerClient.cpp --> SurfaceComposerClient.cpp_ComposerService.cpp:createConnection()
activate SurfaceComposerClient.cpp_ComposerService.cpp

SurfaceComposerClient.cpp_ComposerService.cpp --> SurfaceFlinger.cpp:createConnection()
activate SurfaceFlinger.cpp
SurfaceFlinger.cpp --> SurfaceFlinger.cpp:initClient()
activate SurfaceFlinger.cpp
SurfaceFlinger.cpp --> Client.cpp:new()
activate Client.cpp
deactivate Client.cpp

deactivate SurfaceFlinger.cpp
deactivate SurfaceFlinger.cpp


deactivate SurfaceComposerClient.cpp_ComposerService.cpp

deactivate SurfaceComposerClient.cpp
deactivate SurfaceComposerClient.cpp

deactivate android_view_SurfaceSession.cpp

deactivate SurfaceSession.java

deactivate SurfaceSession.java
deactivate Session.java

deactivate WindowState.java

WindowManagerService.java --> WindowToken.java: addWindow(WindowState.java)
activate WindowToken.java
WindowToken.java --> WindowState.java: addChild()
activate WindowState.java
WindowState.java --> WindowState.java: setParent()
activate WindowState.java
WindowState.java --> WindowState.java: onParentSet()
activate WindowState.java
WindowState.java --> WindowState.java: makeSurface()
activate WindowState.java
WindowState.java --> DisplayContent.java: makeSurface()
activate DisplayContent.java
DisplayContent.java --> SurfaceControl.java_Builder.java: new()
activate SurfaceControl.java_Builder.java
deactivate SurfaceControl.java_Builder.java
deactivate DisplayContent.java
WindowState.java --> SurfaceControl.java_Builder.java: build()
activate SurfaceControl.java_Builder.java
SurfaceControl.java_Builder.java --> SurfaceControl.java: new()
activate SurfaceControl.java
SurfaceControl.java --> SurfaceControl.java: nativeCreate()
activate SurfaceControl.java
SurfaceControl.java --> android_view_SurfaceControl.cpp: nativeCreate()
activate android_view_SurfaceControl.cpp
android_view_SurfaceControl.cpp --> SurfaceComposerClient.cpp: createSurfaceChecked()
activate SurfaceComposerClient.cpp
SurfaceComposerClient.cpp --> Client.cpp: createSurface()
activate Client.cpp
Client.cpp --> SurfaceFlinger.cpp: createLayer()
activate SurfaceFlinger.cpp
activate Client.cpp

deactivate Client.cpp
deactivate Client.cpp
deactivate SurfaceFlinger.cpp

deactivate android_view_SurfaceControl.cpp
deactivate SurfaceComposerClient.cpp
deactivate SurfaceControl.java
deactivate SurfaceControl.java
deactivate SurfaceControl.java_Builder.java
deactivate WindowState.java
deactivate WindowState.java
deactivate WindowState.java
deactivate WindowState.java
deactivate WindowToken.java
deactivate WindowManagerService.java
deactivate Session.java
deactivate ViewRootImpl.java
deactivate WindowManagerImpl.java
deactivate WindowManagerGlobal.java

Choreographer.java --> Choreographer.java: doFrame()
activate Choreographer.java
Choreographer.java --> Choreographer.java: doCallbacks()
activate Choreographer.java
Choreographer.java --> ViewRootImpl.java: doTraversal()
note left: 3.开始首帧绘制
activate ViewRootImpl.java

ViewRootImpl.java --> ViewRootImpl.java: performTraversals()
activate ViewRootImpl.java
ViewRootImpl.java --> ViewRootImpl.java: relayoutWindow()
activate ViewRootImpl.java
ViewRootImpl.java --> Session.java: relayout()
note left: 4. relayout
activate Session.java
Session.java --> WindowManagerService.java: relayoutWindow()
activate WindowManagerService.java
WindowManagerService.java --> WindowManagerService.java: createSurfaceControl()
activate WindowManagerService.java
WindowManagerService.java --> WindowStateAnimator.java: createSurfaceLocked()
activate WindowStateAnimator.java
WindowStateAnimator.java --> WindowSurfaceController.java: new()
activate WindowSurfaceController.java
WindowSurfaceController.java --> SurfaceControl.java_Builder.java: build()
activate SurfaceControl.java_Builder.java
SurfaceControl.java_Builder.java --> SurfaceControl.java: new()
activate SurfaceControl.java
SurfaceControl.java --> SurfaceControl.java: nativeCreate()
activate SurfaceControl.java
SurfaceControl.java --> android_view_SurfaceControl.cpp: nativeCreate()
activate android_view_SurfaceControl.cpp
android_view_SurfaceControl.cpp --> SurfaceComposerClient.cpp: createSurfaceChecked()
activate SurfaceComposerClient.cpp
SurfaceComposerClient.cpp --> SurfaceComposerClient.cpp: createSurface()
activate SurfaceComposerClient.cpp
SurfaceComposerClient.cpp --> SurfaceComposerClient.cpp: createSurfaceChecked()
activate SurfaceComposerClient.cpp
SurfaceComposerClient.cpp --> Client.cpp: createSurface()
activate Client.cpp
Client.cpp --> Client.cpp: createSurface()
activate Client.cpp
Client.cpp --> SurfaceFlinger.cpp: createLayer()
activate SurfaceFlinger.cpp
SurfaceFlinger.cpp --> SurfaceFlinger.cpp: createBufferQueueLayer()
activate SurfaceFlinger.cpp
SurfaceFlinger.cpp --> BufferQueueLayer.cpp: new()
activate BufferQueueLayer.cpp
deactivate BufferQueueLayer.cpp
deactivate ViewRootImpl.java
deactivate Session.java
deactivate WindowManagerService.java
deactivate WindowManagerService.java
deactivate WindowStateAnimator.java
deactivate SurfaceComposerClient.cpp
deactivate SurfaceComposerClient.cpp
deactivate SurfaceComposerClient.cpp
deactivate SurfaceFlinger.cpp
deactivate SurfaceFlinger.cpp
deactivate Client.cpp
deactivate Client.cpp
deactivate SurfaceControl.java
deactivate SurfaceControl.java
deactivate SurfaceControl.java_Builder.java
deactivate WindowSurfaceController.java
deactivate android_view_SurfaceControl.cpp

ViewRootImpl.java --> ViewRootImpl.java: performMeasure()
note left: 3.1 measure
activate ViewRootImpl.java
deactivate ViewRootImpl.java
ViewRootImpl.java --> ViewRootImpl.java: performLayout()
note left: 3.2 layout
activate ViewRootImpl.java
deactivate ViewRootImpl.java
ViewRootImpl.java --> ViewRootImpl.java: performDraw()
note left: 3.3 draw
activate ViewRootImpl.java
deactivate ViewRootImpl.java



@enduml